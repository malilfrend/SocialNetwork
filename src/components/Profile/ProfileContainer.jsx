import React from 'react';import Profile from "./Profile";import {connect} from "react-redux";import {	getUserProfileThunk, setUserProfile,	setUserStatusThunk,	updateUserStatusThunk} from "../../redux/profile-reducer";import withRouter from "../HOC/withRouter";import {compose} from "redux";import withAuthRedirect from "../HOC/withAuthRedirect";import Preloader from "../common/Preloader/Preloader";class ProfileContainer extends React.Component{		componentDidMount() {		let userId = this.props.userId		if(!userId) {			userId = this.props.id		}		this.props.getUserProfileThunk(userId)		this.props.setUserStatusThunk(userId)	}	componentWillUnmount() {		this.props.setUserProfile(null)	}		render() {				return (				<div>					<Profile						{...this.props}					/>				</div>		)	}}let mapStateToProps = (state) => {	return {		profile: state.profilePage.profile,		status: state.profilePage.status,		id: state.auth.id,	}}export default compose(	connect(mapStateToProps, {getUserProfileThunk, setUserProfile, setUserStatusThunk, updateUserStatusThunk}),	withRouter,	withAuthRedirect	)(ProfileContainer)